# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npx jest --coverage --runInBand
        env:
          CI: true

      #   - name: Enforce coverage threshold (80% lines)
      #     run: |
      #       node -e "
      #       const fs = require('fs');
      #       const data = JSON.parse(fs.readFileSync('coverage/coverage-summary.json','utf8'));
      #       const pct = data.total.lines.pct;
      #       console.log('Total lines coverage:', pct + '%');
      #       if (pct < 80) { console.error('❌ Coverage below threshold: ' + pct + '%'); process.exit(1); }
      #       console.log('✅ Coverage threshold met');
      #       "

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unit
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }} # optional for public repos


  # Optional: E2E tests (Cypress or Playwright)
  # e2e:
  #   name: E2E (Cypress)
  #   runs-on: ubuntu-latest
  #   needs: unit-tests
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #     - name: Install deps
  #       run: npm ci
  #     - name: Start app (adapt command to your project)
  #       run: npm run start & npx wait-on http://localhost:3000
  #     - name: Run Cypress tests
  #       run: npx cypress run
  #       env:
  #         CI: true

  # Optional: Lighthouse CI (needs a running site and LHCI token for uploading)
  # lighthouse:
  #   name: Lighthouse CI
  #   runs-on: ubuntu-latest
  #   needs: unit-tests
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #     - run: npm ci
  #     - name: Start app
  #       run: npm run start & npx wait-on http://localhost:3000
  #     - name: Run LHCI autorun
  #       run: npx @lhci/cli autorun --upload.target=temporary-public-storage
  #       # For persistent LHCI upload, configure LHCI_TOKEN as secret and set upload.target=lhci
